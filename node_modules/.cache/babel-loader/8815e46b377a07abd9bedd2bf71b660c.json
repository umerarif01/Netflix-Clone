{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Umer\\\\Desktop\\\\netflix--main\\\\src\\\\components\\\\plans\\\\plans.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../plans/_plans.styles.scss\"; //redux\n\nimport { useSelector } from \"react-redux\";\nimport { user_Selector } from \"../../features/userSlice\"; //firebase\n\nimport db from \"../../firebase\"; //STRIPE\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Plan = () => {\n  _s();\n\n  const user = useSelector(user_Selector);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    db.collection(\"products\").where('active', '==', true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection(\"prices\").get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n\n  const loadCheckout = async priceId => {\n    const docRef = await db.collection(\"customers\").doc(user.uid).collection(\"checkout_sessions\").add({\n      price: priceId,\n      success_url: window.location.origin,\n      cancel_url: window.location.origin\n    });\n    docRef.onSnapshot(async snap => {\n      const {\n        error,\n        sessionId\n      } = snap.data();\n\n      if (error) {\n        //show error to your customers\n        //inspect your function logs in firebase\n        alert(`An Error has ocurred: ${error.message}`);\n      }\n\n      if (sessionId) {\n        //if we have a session, then redirect to stripe\n        //initiate stripe\n        const stripe = await loadStripe(\"pk_test_51JGjNmBGz2gPw3QtHHYS36cSFLiorNZEmb1aEnTpEJ7dXrgsWX1dFCSXVB7079VpqXhfOUn3BpEQpB5R5scuYnrc00yfdFXAA8\");\n        stripe.redirectToCheckout({\n          sessionId\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planScreen\",\n    children: Object.entries(products).map(([productId, productData]) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\" \", productData.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\" \", productData.description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadCheckout(productData.prices.priceId),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Plan, \"oT4mzHmlJGcOCpUGozIn/kncnCA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Plan;\nexport default Plan;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"sources":["C:/Users/Umer/Desktop/netflix--main/src/components/plans/plans.component.jsx"],"names":["React","useEffect","useState","useSelector","user_Selector","db","loadStripe","Plan","user","products","setProducts","collection","where","get","then","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","docs","price","prices","priceId","priceData","loadCheckout","docRef","doc","uid","add","success_url","window","location","origin","cancel_url","onSnapshot","snap","error","sessionId","alert","message","stripe","redirectToCheckout","Object","entries","map","productId","productData","name","description"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport \"../plans/_plans.styles.scss\";\n\n//redux\nimport { useSelector } from \"react-redux\";\nimport { user_Selector } from \"../../features/userSlice\";\n\n//firebase\nimport db from \"../../firebase\";\n\n//STRIPE\nimport {loadStripe} from \"@stripe/stripe-js\";\n\n\n\n\nconst Plan = () => {\n\n\n    const user = useSelector(user_Selector);\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n\n            db.collection(\"products\")\n            .where('active', '==', true)\n            .get()\n            .then((querySnapshot) => {\n\n                const products = {};\n                querySnapshot.forEach(async (productDoc) => {\n\n                    products[productDoc.id] = productDoc.data();\n                    const priceSnap = await productDoc.ref.collection(\"prices\").get();\n                    priceSnap.docs.forEach(price => {\n\n                        products[productDoc.id].prices = {\n\n                            priceId : price.id,\n                            priceData: price.data(),\n                        }\n                    });\n\n                });\n\n                setProducts(products);\n            }); \n\n\n    }, []);\n\n\n    const loadCheckout = async (priceId) => {\n\n        const docRef = await db.collection(\"customers\")\n        .doc(user.uid)\n        .collection(\"checkout_sessions\")\n        .add({\n\n            price: priceId,\n            success_url: window.location.origin,\n            cancel_url: window.location.origin,\n\n        });\n\n        docRef.onSnapshot(async (snap) => {\n\n            const {error, sessionId} = snap.data();\n\n            if (error) {\n\n                //show error to your customers\n                //inspect your function logs in firebase\n                alert(`An Error has ocurred: ${error.message}`)\n            }\n\n            if(sessionId) {\n\n                //if we have a session, then redirect to stripe\n                //initiate stripe\n\n                const stripe = await loadStripe(\"pk_test_51JGjNmBGz2gPw3QtHHYS36cSFLiorNZEmb1aEnTpEJ7dXrgsWX1dFCSXVB7079VpqXhfOUn3BpEQpB5R5scuYnrc00yfdFXAA8\");\n\n                stripe.redirectToCheckout({sessionId});\n            }\n        })\n\n    }\n\n    return(\n\n        <div className=\"planScreen\">\n\n            {Object.entries(products).map(([productId, productData]) => {\n\n                return(\n\n                    <div className=\"planSection\">\n\n                        <div className=\"planInfo\">\n                           <h5> {productData.name} </h5>\n                           <h6> {productData.description} </h6>\n                        </div>\n\n                        <button onClick={() => loadCheckout(productData.prices.priceId)}>Subscribe</button>\n                    </div>\n\n                );\n            })}\n\n        </div>\n    )\n}\n\nexport default Plan;"]},"metadata":{},"sourceType":"module"}